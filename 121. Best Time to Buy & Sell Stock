Code: 
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        min_price = float('inf') 
        max_profit = 0 

        for price in prices:
            if price < min_price:
                min_price = price 

            profit = price - min_price 

            if profit > max_profit:
                max_profit = profit 
            
        return max_profit 

# Explaination 

Sure! Here‚Äôs a simple explanation of the code:

---

### üí° **What does the function do?**
The `maxProfit` function finds the **maximum profit** you can make by buying and selling a stock **once**.

‚úÖ **Example:**
```
Prices:  [7, 1, 5, 3, 6, 4]  
Maximum Profit:  5  
(You buy at 1 and sell at 6)
```

---

### üî• **How the code works**

1Ô∏è‚É£ **Initialize Variables:**
```python
min_price = float('inf')   # Start with the highest possible value
max_profit = 0              # Start with no profit
```
- `min_price` ‚Üí Keeps track of the **lowest price** so far.
- `max_profit` ‚Üí Stores the **best profit** you can get.

---

2Ô∏è‚É£ **Loop through each price:**
```python
for price in prices:
```
- You go through the list **one price at a time**.

---

3Ô∏è‚É£ **Check for the lowest price:**
```python
if price < min_price:
    min_price = price 
```
- If the current `price` is smaller than `min_price`, update `min_price`.
- This helps you **find the lowest price to buy**.

‚úÖ Example:
```
Prices: [7, 1, 5, 3, 6, 4]

Iteration 1 ‚Üí min_price = 7  
Iteration 2 ‚Üí min_price = 1 (updated, since 1 < 7)
Iteration 3 ‚Üí min_price stays 1  
Iteration 4 ‚Üí min_price stays 1  
Iteration 5 ‚Üí min_price stays 1  
Iteration 6 ‚Üí min_price stays 1  
```

---

4Ô∏è‚É£ **Calculate the profit:**
```python
profit = price - min_price 
```
- **Profit** = Current price ‚àí Lowest price so far.

‚úÖ Example:
```
At price 5 ‚Üí profit = 5 - 1 = 4  
At price 6 ‚Üí profit = 6 - 1 = 5  
```

---

5Ô∏è‚É£ **Update max profit:**
```python
if profit > max_profit:
    max_profit = profit
```
- If the current profit is **greater** than the previous `max_profit`, update it.

‚úÖ Example:
```
At price 5 ‚Üí max_profit = 4  
At price 6 ‚Üí max_profit = 5 (new max profit)
```

---

6Ô∏è‚É£ **Return the maximum profit:**
```python
return max_profit
```
- Finally, return the highest profit you found.

---

### ‚úÖ **Key Takeaway**
1. Track the **lowest price** as you iterate.  
2. Calculate the **profit** at each step.  
3. Keep updating the **max profit** if you find a better one.  
4. Finally, return the maximum profit you can make! üéØ
            
        
        
